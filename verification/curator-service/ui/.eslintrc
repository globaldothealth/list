{
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint"],  
  "extends": ["react-app", "eslint:recommended", "plugin:@typescript-eslint/recommended"],
    "parserOptions": {
    "ecmaVersion": 2017,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },  
  "env": {
    "browser": true,
    "node": true,
    "es6": true,
    "jest": true
  },
    "rules": {
    "no-bitwise": [
      "error"
    ],
    "linebreak-style": [
      "error",
      "unix"
    ],
    "quotes": [
      "error",
      "single"
    ],
    "semi": [
      "error",
      "always"
    ],
    "@typescript-eslint/no-redeclare": "off",
    "@typescript-eslint/no-unused-expressions": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-var-requires": "off"
  },
  "overrides": [
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "plugins": ["@typescript-eslint"],
      "extends": [        
        "react-app",
        "eslint:recommended", 
        "plugin:@typescript-eslint/recommended",        
        "plugin:cypress/recommended",
        "prettier", // Uses eslint-config-prettier to disable ESLint rules from @typescript-eslint/eslint-plugin that would conflict with prettier
        "plugin:prettier/recommended" // Enables eslint-plugin-prettier and eslint-config-prettier. This will display prettier errors as ESLint errors. Make sure this is always the last configuration in the extends array        
      ]
    }
  ],
  "settings": {
    "react": {
      "version": "detect"
    }
  }
}