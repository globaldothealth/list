openapi: 3.0.3
info:
  title: EPID data service
  description: Server for CRUD operations on EPID line-list data
  termsOfService: "https://www.healthmap.org/about/termsofuse/"
  contact:
    email: info@healthmap.org
  license:
    name: MIT
    url: "https://opensource.org/licenses/MIT"
  version: 1.0.0
paths:
  /cases:
    get:
      summary: Lists cases
      operationId: listCases
      parameters:
        - name: page
          in: query
          description: The pages of cases to skip before starting to collect the result set
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: The number of items to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 100
            default: 10
      responses:
        "200":
          $ref: "#/components/responses/200CaseArray"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "422":
          $ref: "#/components/responses/422"
        "500":
          $ref: "#/components/responses/500"
    post:
      summary: Creates a new case
      operationId: createCase
      requestBody:
        description: Case to add
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewCase"
      responses:
        "201":
          $ref: "#/components/responses/201Case"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "422":
          $ref: "#/components/responses/422"
        "500":
          $ref: "#/components/responses/500"
  /cases/{id}:
    parameters:
      - name: id
        in: path
        description: The case ID
        required: true
        schema:
          type: string
          pattern: '^[a-f\d]{24}$'
    get:
      summary: Gets a specific case
      operationId: getCase
      responses:
        "200":
          $ref: "#/components/responses/200Case"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "422":
          $ref: "#/components/responses/422"
        "500":
          $ref: "#/components/responses/500"
    put:
      summary: Updates a specific case
      operationId: updateCase
      requestBody:
        description: Case to update
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Case"
      responses:
        "200":
          $ref: "#/components/responses/200Case"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "422":
          $ref: "#/components/responses/422"
        "500":
          $ref: "#/components/responses/500"
    delete:
      summary: Deletes a specific case
      operationId: deleteCase
      responses:
        "204":
          description: Case deleted
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
components:
  schemas:
    Case:
      description: A complete case; a superset of "#/components/schemas/NewCase" with server-added fields
      allOf:
        - $ref: "#/components/schemas/NewCase"
        - type: object
    CaseArray:
      type: array
      items:
        $ref: "#/components/schemas/Case"
    NewCase:
      description: The subset of "#/components/schemas/Case" required to create the entity
      type: object
  responses:
    "200Case":
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Case"
    "200CaseArray":
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CaseArray"
    "201Case":
      description: Created
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Case"
    "400":
      description: Malformed request
    "401":
      description: Unauthorized
    "404":
      description: Not found
    "422":
      description: Unprocessable entity
    "500":
      description: Internal server error
servers:
  - url: http://localhost:3000/api
    description: Local server
