# Docker file for data service used in production.
# Security best-practices are followe and trimmed down image is used.
FROM node:12 as builder

# Create app directory
WORKDIR /usr/src/app/data-serving/data-service

# Install app dependencies
# A wildcard is used to ensure both package.json AND package-lock.json are copied
# where available (npm@5+)
COPY data-serving/data-service/package*.json ./

# RUN npm clean install
RUN npm ci

# Bundle app source
COPY data-serving/data-service/. .

# Bundle common files
COPY common/* ../../common/

# Build the app
RUN npm run-script build

# Expose service on port 3000.
EXPOSE 3000

# Multi-staged build, we don't need a full node image to run the app.
FROM node:alpine as app

# No need to run as root.
USER node

# Run with node env set to production.
ENV NODE_ENV production

WORKDIR /usr/src/app/

# Copy compiled app from previous stage.
COPY --from=builder /usr/src/app/data-serving/data-service/node_modules ./node_modules
COPY --from=builder /usr/src/app/data-serving/data-service/api ./api
COPY --from=builder /usr/src/app/data-serving/data-service/dist ./dist

# Start service, do not use npm start instead invoke node directly
# to avoid wrapping the process uselessly and correctly catch SIGTERM and SIGINT.
CMD [ "node", "dist/server.js" ]